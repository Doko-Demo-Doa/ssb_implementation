# See <https://www.appveyor.com/docs/build-configuration/>

# Windows with MSVC 2017 (requirement for rust MSVC compiler)
os: Visual Studio 2017
# Just for 'master' branch
branches:
  only:
    - master

# Set environment variables
environment:
  # For all jobs
  global:
    # Show rust backtrace on error
    RUST_BACKTRACE: 1
  # For every job
  matrix:
    # MSVC toolchain
    - channel: stable
      target: x86_64-pc-windows-msvc
    - channel: nightly
      target: x86_64-pc-windows-msvc
    # GNU toolchain
    - channel: stable
      target: x86_64-pc-windows-gnu

# Configure jobs
matrix:
  # Ignore failures in jobs with nightly channel
  allow_failures:
    - channel: nightly

# Cache build dependencies
cache:
  # Cargo global index
  - C:\Users\appveyor\.cargo\registry
  # Build output
  - target

# Install software
install:
  # RUST
  # Load rust installer
  - curl -fsS -o rustup-init.exe https://win.rustup.rs
  # Install rust toolchain <https://github.com/rust-lang/rustup.rs/blob/master/rustup-init.sh#L27>
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  # Add global access to rust binaries
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  # Show rust version (detailed)
  - rustc -Vv
  - cargo -Vv
  # PYTHON
  # Select pre-installed python version
  - set PYTHON=C:\Python37-x64
  # Add global access to python binaries (overwrite default python 2.7)
  - set PATH=%PYTHON%;%PATH%
  # Show python version (detailed)
  - python -VV
  # VAPOURSYNTH
  # Load vapoursynth R46
  - curl -fsSL -o VapourSynth64-Portable-R46.7z https://github.com/vapoursynth/vapoursynth/releases/download/R46/VapourSynth64-Portable-R46.7z
  # Extract vapoursynth archive into python
  - 7z x VapourSynth64-Portable-R46.7z -o%PYTHON% -y
  # Show vapoursynth version
  - python -c "import vapoursynth; print(vapoursynth.core.version())"
  # Add compiler access to vapoursynth sdk
  - set VAPOURSYNTH_LIB_DIR=%PYTHON%/sdk/lib64

# Run build by scripting (instead of default MSVC project search & execute)
build_script: echo %target% | findstr msvc >nul && cargo build --verbose || cargo build -p ssb_parser -p ssb_renderer --verbose

# Run tests by scripting
test_script: echo %target% | findstr msvc >nul && cargo test --verbose || cargo test -p ssb_parser -p ssb_renderer --verbose