# See <https://docs.travis-ci.com/user/job-lifecycle/>

# Ubuntu (xenial) as operating system
dist: xenial
# Rust as project language
language: rust

# Add environment variable to show rust backtrace on error
env:
  global:
    - RUST_BACKTRACE=1
# Cache build dependencies
cache: cargo

# Jobs configuration
matrix:
  # Ignore failures in nightly release
  allow_failures:
    - rust: nightly
  # Don't wait for allowed failures to report final status
  fast_finish: true
  # Define jobs
  include:
    # Stable
    - rust: stable
      # Add system dependencies
      addons:
        apt:
          sources:
            - sourceline: 'ppa:djcj/vapoursynth'
          packages:
            - python3
            - vapoursynth
            # kcov requirements
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc
            - binutils-dev
            - libiberty-dev
      # CodeCov upload
      after_success: |
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz && # Download kcov sources
        tar xzf master.tar.gz && cd kcov-master &&  # Unzip kcov sources
        mkdir build && cd build &&  # Make intermediate kcov build directory
        cmake .. && make && # Generate Makefile by CMake and build kcov
        sudo make install &&  # Install kcov to system
        cd ../.. && rm -rf kcov-master && # Delete kcov sources
        for file in target/debug/*_tests-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done && # Generate code coverage reports
        bash <(curl -s https://codecov.io/bash) &&  # Upload code coverage reports (by environment variable CODECOV_TOKEN)
        echo "Uploaded code coverage" # Print finish message
      # Crates.io release
      deploy:
        provider: script  # Script execution
        script: cargo login $CRATES_TOKEN; cargo publish --manifest-path ssb_parser/Cargo.toml || true; cargo publish --manifest-path ssb_renderer/Cargo.toml || true; cargo publish --manifest-path ssb_filter/Cargo.toml || true # Link to crates.io and publish ssb_* projects
        on:
          tags: true  # Commit must be tagged!
    # Nightly
    - rust: nightly
      # Add system dependencies
      addons:
        apt:
          sources:
            - sourceline: 'ppa:djcj/vapoursynth'
          packages:
            - python3
            - vapoursynth

# Fix Vapoursynth-Script library link
before_script: sudo ln -s /usr/lib/x86_64-linux-gnu/libvapoursynth-script.so.0 /usr/lib/x86_64-linux-gnu/libvapoursynth-script.so

# Execute rust builds & tests
script:
  - cargo build --verbose
  - cargo test --verbose