# See <https://www.appveyor.com/docs/build-configuration/>

# Windows with MSVC 2017 (requirement for rust MSVC compiler)
os: Visual Studio 2017
# Just for 'master' branch
branches:
  only:
    - master

# Set environment variables
environment:
  # For all jobs
  global:
    # Show rust backtrace on error
    RUST_BACKTRACE: 1
  # For every job
  matrix:
    # MSVC toolchain
    - channel: stable
      target: x86_64-pc-windows-msvc
      with_vs: true
    - channel: nightly
      target: x86_64-pc-windows-msvc
      with_vs: false
    # GNU toolchain
    - channel: stable
      target: x86_64-pc-windows-gnu
      with_vs: false

# Configure jobs
matrix:
  # Ignore failures in jobs with nightly channel
  allow_failures:
    - channel: nightly

# Cache build dependencies
cache:
  # Cargo global index
  - C:\Users\appveyor\.cargo\registry
  # Build output
  - target

# Install dependencies
install:
  # RUST
  # Load rust installer
  - curl -fsS -o rustup-init.exe https://win.rustup.rs
  # Install rust toolchain <https://github.com/rust-lang/rustup.rs/blob/master/rustup-init.sh#L27>
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  # Add global access to rust binaries
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  # Show rust version (detailed)
  - rustc -Vv
  - cargo -Vv
  # VAPOURSYNTH (+PYTHON)
  - if %with_vs% == true call .scripts/vapoursynth64-install.bat

# Run build by scripting (instead of default MSVC project search & execute)
build_script: if %with_vs% == true (cargo build --verbose) else (cargo build -p ssb_parser -p ssb_renderer --verbose)

# Run tests by scripting
test_script: if %with_vs% == true (cargo test --verbose) else (cargo test -p ssb_parser -p ssb_renderer --verbose)